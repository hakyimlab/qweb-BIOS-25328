{
  "hash": "ba9d04404114c7b35de63a3380977ad5",
  "result": {
    "markdown": "---\ntitle: lab 4\ndate: 2024-04-12\ncategories: \n  - bios25328\n  - lab\ndate-modified: last-modified\ndescription: description here\nformat:\n  html:\n    toc: true\n    code-fold: false\n    code-summary: \"Show the code\"\n    code-tools: true\n    code-overflow: wrap\neditor_options: \n  chunk_output_type: console\n---\n\n\n# Goals and Introduction \nIn this lab we are going to use the PRSice software to take height GWAS results and predict height of the  Personal Genome Project individuals using their genotype data.\n\n**Goals**\n\n  - [ ] Download data from box\n  - [ ] Download PRSice\n  - [ ] Run exploratory analysis of data \n  - [ ] Run PRSice \n  - [ ] Plot observed versus predicted for height\n\n# Setup \n\n## load R packages and define paths\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressMessages(library(tidyverse))\nsuppressMessages(library(RSQLite))\nsuppressMessages(library(glue))\nPRE = \"/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data\"\nDATA=glue(\"{PRE}/2021-04-21-personal-genomes-project-data/Lab-personal-genomes-project-data\")\nif(!file.exists(DATA)) system(glue(\"mkdir -p {DATA}\"))\n```\n:::\n\n\n## Download data\n\n- [ ] download the data [from here](https://uchicago.box.com/s/snhot2x0272dzuuas4ipkgnrlxva2qga) and place it in a directory called DATA\n\n\n::: {.cell}\n\n:::\n\n\n- [ ] download PRSice software from https://choishingwan.github.io/PRSice/\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nwget https://github.com/choishingwan/PRSice/releases/download/2.3.3/PRSice_mac.zip\n```\n:::\n\n\n- [ ] move the executable to the directory where you keep your software (optional)\n\n** the first time you run PRSice, it will install additional components **\n\n** make sure PRSice is executable ** `chmod u+x PRSice`\n\n### Terminal Setup\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nPRE=\"/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data\"\nDATA=\"$PRE/2021-04-21-personal-genomes-project-data/Lab-personal-genomes-project-data\"\n\nPRSice=\"/Users/haekyungim/bin/PRSice_mac\" # file/path/to/PRSice\n$PRSice/PRSice_mac --help \n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\ncd $DATA\nWORK=$DATA\n```\n:::\n\n\n# Exploration of the Data \n\n## open the database with phenotype information and list tables\n\n::: {.cell}\n\n```{.r .cell-code}\ndbname <- paste0(DATA,\"/repgp-data.sqlite3\") ##This is just to create the file path to the sqlite3 file \n## connect to db\ndb = dbConnect(sqlite, dbname)\n## list tables\ndbListTables(db)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"ancestry_jkp\"   \"ancestry_pop\"   \"ancestry_supop\" \"users\"         \n```\n:::\n:::\n\n\n## query database users table\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbListFields(db,\"users\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"id\"       \"sample\"   \"height\"   \"weight\"   \"human_id\" \"file_id\"  \"blood\"   \n[8] \"gender\"   \"race\"    \n```\n:::\n\n```{.r .cell-code}\nquery <- function(...) dbGetQuery(db, ...)\nusers = query(\"select * from users\")\nnames(users)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"id\"       \"sample\"   \"height\"   \"weight\"   \"human_id\" \"file_id\"  \"blood\"   \n[8] \"gender\"   \"race\"    \n```\n:::\n:::\n\n\n### look at distribution by count for each column\n\n\n::: {.cell}\n\n```{.r .cell-code}\nusers %>% count(race)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                              race   n\n1                                *  68\n2 American Indian or Alaska Native   2\n3                            Asian   6\n4        Black or African American   1\n5                Caucasian (White)   1\n6               Hispanic or Latino   2\n7                  Hispanic/Latino   3\n8                            White 167\n```\n:::\n\n```{.r .cell-code}\nusers  %>% count(gender)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  gender   n\n1      *  69\n2 Female  46\n3   Male 135\n```\n:::\n\n```{.r .cell-code}\nusers %>% count(blood)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  blood   n\n1     * 111\n2    A+  41\n3    A-  10\n4   AB+   4\n5   AB-   1\n6    B+  16\n7    B-   4\n8    O+  52\n9    O-  11\n```\n:::\n:::\n\n\n### plot height distribution by gender\n\n\n::: {.cell}\n\n```{.r .cell-code}\nusers %>% ggplot(aes(height,fill=gender)) + geom_density(alpha=0.6) + ggtitle(\"Height by gender - Missing gender, *, has bi-modal distr.\") + theme_minimal(base_size = 15)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot geneder distribution-1.png){width=672}\n:::\n:::\n\n\n# run PRSice \n\n## create phenotype data file\n\ncreate phenotype data file as intersection of the plink formatted fam file and the users table from the database repgp-data.sqlite3\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfam = read_tsv(glue::glue(\"{DATA}/repgp.fam\"),col_names = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 568 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (1): X2\ndbl (5): X1, X3, X4, X5, X6\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nnames(fam)[1:2] = c(\"FID\",\"IID\")\nfam <- fam %>% select(FID, IID) %>% inner_join(users %>% select(sample,height,weight,gender), by=c(\"IID\"=\"sample\")) \nwrite_tsv(fam,file=glue::glue(\"{DATA}/phenodata.txt\"))\n```\n:::\n\n\n## execute bash command to run PRSice\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n\nmkdir $WORK/output\n\nRscript $PRSice/PRSice.R --dir $PRSice \\\n    --prsice $PRSice/PRSice_mac \\\n    --base $WORK/ukb_height.gz \\\n    --target $WORK/repgp.chr# \\\n    --snp variant_id \\\n    --A1 effect_allele \\\n    --A2 non_effect_allele \\\n    --stat effect_size \\\n    --beta \\\n    --pvalue pvalue \\\n    --pheno-file $WORK/phenodata.txt \\\n    --pheno-col height \\\n    --bar-levels 5e-08,5e-07,5e-06,5e-05,5e-04,5e-03,5e-02,5e-01,1 \\\n    --fastscore \\\n    --binary-target F \\\n    --thread 2 \\\n    --out $WORK/output/height_score_all\n\n```\n:::\n\n\nIf you get duplicated SNP ID, follow the instructions \n\n::: {.cell}\n\n```{.bash .cell-code}\nRscript $PRSice/PRSice.R --dir $PRSice \\\n    --prsice $PRSice/PRSice_mac \\\n    --base $WORK/ukb_height.gz \\\n    --extract $WORK/output/height_score_all.valid \\\n    --target $WORK/repgp.chr# \\\n    --snp variant_id \\\n    --A1 effect_allele \\\n    --A2 non_effect_allele \\\n    --stat effect_size \\\n    --beta \\\n    --pvalue pvalue \\\n    --pheno-file $WORK/phenodata.txt \\\n    --pheno-col height \\\n    --bar-levels 5e-08,5e-07,5e-06,5e-05,5e-04,5e-03,5e-02,5e-01,1 \\\n    --fastscore \\\n    --binary-target F \\\n    --thread 2 \\\n    --out $WORK/output/height_score_all\n\n```\n:::\n\n\n> This may take a couple minutes\n\n# plot observed vs predicted height \n\n\n::: {.cell}\n\n```{.r .cell-code}\n## we already have the phenotype data in the fam variable\npredicted_height = read_delim(glue::glue(\"{DATA}/output/height_score_all.best\"),delim=\" \")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 568 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \" \"\nchr (2): IID, In_Regression\ndbl (2): FID, PRS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined <- predicted_height %>% inner_join(fam,by=c(\"IID\"=\"IID\")) \ncombined %>% ggplot(aes(PRS,height)) + geom_point() + theme_minimal(base_size = 15)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## regress observed height with predicted height (PRS)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(lm(height ~ PRS,data=combined)) %>% coef() \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               Estimate   Std. Error    t value      Pr(>|t|)\n(Intercept)    172.6716 6.075067e-01 284.230021 1.916175e-259\nPRS         159197.1399 2.478220e+04   6.423849  9.758137e-10\n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}