{
  "hash": "426d2a56549a2cf422418af8dd1c13bd",
  "result": {
    "markdown": "---\ntitle: lecture 8\ndate: 2024-04-10\nauthor: Haky Im\ncategories:\n  - bios25328\n  - lecture\neditor_options: \n  chunk_output_type: console\n---\n\n\nLecture 8 notes [link](https://www.icloud.com/keynote/025sZaAoLKDAekdsgjQ7-KAhg#L8-QTL-analysis-GTEx-2024)\n\n## Download the GWAS catalog\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressMessages(library(tidyverse))\nsuppressMessages(library(glue))\n##PRE = \"/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data\"\nPRE=\"~/Downloads/\"\nDATA = glue(\"{PRE}/2024-04-10-gwas-catalog-analysis-2022\")\nif(!file.exists(DATA)) system(glue(\"mkdir -p {DATA}\"))\nWORK=DATA\n\n## download data from GWAS catalog\n## https://www.ebi.ac.uk/gwas/docs/file-downloads\n\n# - [ ] make sure the DATAFILE name is the same as the one you just downloaded\n# DATAFILE = \"gwas_catalog_v1.0.2-associations_e105_r2022-04-07.tsv\"\nDATAFILE=\"full\"\nfilename = glue(\"{DATA}/{DATAFILE}\")\n\nif(!file.exists(filename)) system(glue(\"wget -P {DATA} https://www.ebi.ac.uk/gwas/api/search/downloads/full\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwascatalog = read_tsv(filename)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 589865 Columns: 34\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (23): FIRST AUTHOR, JOURNAL, LINK, STUDY, DISEASE/TRAIT, INITIAL SAMPLE...\ndbl   (9): PUBMEDID, UPSTREAM_GENE_DISTANCE, DOWNSTREAM_GENE_DISTANCE, MERGE...\ndate  (2): DATE ADDED TO CATALOG, DATE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\ndim(gwascatalog)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 589865     34\n```\n:::\n\n```{.r .cell-code}\nnames(gwascatalog)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"DATE ADDED TO CATALOG\"      \"PUBMEDID\"                  \n [3] \"FIRST AUTHOR\"               \"DATE\"                      \n [5] \"JOURNAL\"                    \"LINK\"                      \n [7] \"STUDY\"                      \"DISEASE/TRAIT\"             \n [9] \"INITIAL SAMPLE SIZE\"        \"REPLICATION SAMPLE SIZE\"   \n[11] \"REGION\"                     \"CHR_ID\"                    \n[13] \"CHR_POS\"                    \"REPORTED GENE(S)\"          \n[15] \"MAPPED_GENE\"                \"UPSTREAM_GENE_ID\"          \n[17] \"DOWNSTREAM_GENE_ID\"         \"SNP_GENE_IDS\"              \n[19] \"UPSTREAM_GENE_DISTANCE\"     \"DOWNSTREAM_GENE_DISTANCE\"  \n[21] \"STRONGEST SNP-RISK ALLELE\"  \"SNPS\"                      \n[23] \"MERGED\"                     \"SNP_ID_CURRENT\"            \n[25] \"CONTEXT\"                    \"INTERGENIC\"                \n[27] \"RISK ALLELE FREQUENCY\"      \"P-VALUE\"                   \n[29] \"PVALUE_MLOG\"                \"P-VALUE (TEXT)\"            \n[31] \"OR or BETA\"                 \"95% CI (TEXT)\"             \n[33] \"PLATFORM [SNPS PASSING QC]\" \"CNV\"                       \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## show number of entries in the GWAS catalog with cancer\ngwascatalog %>% select(`DISEASE/TRAIT`, MAPPED_GENE) %>% filter(grepl(\"cancer\",`DISEASE/TRAIT`)) %>% dim()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10169     2\n```\n:::\n:::\n\n\n> Number of distinct loci reported in GWAS of various cancers\n\nNumber of entries in the GWAS catalog with cancer, unique loci (it's a reasonable assumption that mapped genes will be a good way to count loci)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwascatalog %>% select(`DISEASE/TRAIT`, MAPPED_GENE) %>% filter(grepl(\"cancer\",`DISEASE/TRAIT`)) %>% unique() %>% dim()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6047    2\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}